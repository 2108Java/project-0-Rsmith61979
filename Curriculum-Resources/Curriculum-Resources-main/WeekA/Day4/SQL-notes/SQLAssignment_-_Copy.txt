Assignment 


1)Select all the planets from the planets table 

2)Select 'Jupiter' by its name and only return the name and description column

3)Select all the planets with rings;

4)Select all the planets, descending by the number of moons

5)Select all the planets ascending by their names 

6)Insert another planet into the table, without a description. What do you need to ALTER to allow you to do that?

7)Update Mercury, it shouldn't have rings 

9)Select the planet with the third highest number of moons 

11)With a single query, give all the planets without a moon a single moon each. 

15)Delete Pluto from the planet list, using it's name. 



******CREATING THE TABLE*****************

create table planets(
--int, varchar, nvarchar, decimal, boolean, https://www.postgresql.org/docs/9.5/datatype.html
-- column name, column type, constraints 
	planet_id serial primary key,
	planet_name varchar(30) not null,
	planet_description VARCHAR(60) not null unique,
	has_rings boolean not null,
	number_of_moons smallint check(number_of_moons > -1)

);

insert into planets (planet_name, planet_description, has_rings, number_of_moons) values 
	('Mercury', 'Never too close', true, 0),
	('Venus', 'Getting a tad warm', false, 0),
	('Earth', 'cradle of civilization', false, 1),
	('Mars', 'Earth 2.0', false, 2),
	('Jupiter', 'Big', true, 67),
	('Saturn', 'very ringy', true, 82),
	('Uranus', 'blue', true, 27),
	('Neptune', 'getting nippy', true, 14),
	('Pluto', 'you cannot get rid of me', false, 2);





